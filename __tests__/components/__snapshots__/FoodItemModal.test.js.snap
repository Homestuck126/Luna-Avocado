// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Food Item Modal calls onClose prop when Close pressable is pressed 1`] = `null`;

exports[`Food Item Modal renders modal with given data 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "marginTop": 22,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": "#708090",
          "borderRadius": 20,
          "borderWidth": 3,
          "elevation": 5,
          "height": "24%",
          "margin": 20,
          "padding": 5,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 4,
          "width": "80%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "backgroundColor": "rgb(248,248,255)",
            },
            {
              "alignItems": "flex-start",
              "borderColor": "#C0C0C0",
              "borderRadius": 10,
              "borderWidth": 3,
              "height": 120,
              "margin": 10,
              "padding": 10,
              "width": "95%",
            },
          ]
        }
      >
        <Text
          style={
            {
              "fontSize": 18,
              "fontWeight": "bold",
              "marginBottom": 5,
            }
          }
        >
          testFood1
        </Text>
        <Text
          style={
            {
              "color": "#666",
              "fontSize": 14,
            }
          }
        >
          Calories: 
          100
        </Text>
        <Text
          style={
            {
              "color": "#666",
              "fontSize": 14,
            }
          }
        >
          Protein: 
          10
        </Text>
        <Text
          style={
            {
              "color": "#666",
              "fontSize": 14,
            }
          }
        >
          Carbs: 
          10
        </Text>
        <Text
          style={
            {
              "color": "#666",
              "fontSize": 14,
            }
          }
        >
          Fat: 
          10
        </Text>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "borderRadius": 8,
                "marginHorizontal": 5,
                "padding": 10,
                "width": "45%",
              },
              undefined,
              {
                "backgroundColor": "rgb(52,152,219)",
              },
            ]
          }
        >
          <Text
            style={{}}
          >
            Edit
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "alignItems": "center",
                "borderRadius": 8,
                "marginHorizontal": 5,
                "padding": 10,
                "width": "45%",
              },
              undefined,
              {
                "backgroundColor": "rgb(52,152,219)",
              },
            ]
          }
          testID="FoodItemModal:ClosePressable:Press"
        >
          <Text
            style={{}}
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
